# ea & Leave1Out
## TangentSpace Mapping
| abbr.                                             | test_score       | train_score      | params                                                                           |
|---------------------------------------------------|------------------|------------------|----------------------------------------------------------------------------------|
| TSFeatureExtractor()_LogisticRegression()         | 0.513 (+/-0.025) | 0.680 (+/-0.033) | {'TangentSpace': TSFeatureExtractor(), 'classify': LogisticRegression()}         |
| TangentSpace()_LinearDiscriminantAnalysis()       | 0.505 (+/-0.009) | 0.787 (+/-0.029) | {'TangentSpace': TangentSpace(), 'classify': LinearDiscriminantAnalysis()}       |
| TSFeatureExtractor()_SVC()                        | 0.500 (+/-0.000) | 0.715 (+/-0.055) | {'TangentSpace': TSFeatureExtractor(), 'classify': SVC()}                        |
| TangentSpace()_SVC()                              | 0.500 (+/-0.000) | 0.606 (+/-0.047) | {'TangentSpace': TangentSpace(), 'classify': SVC()}                              |
| TangentSpace()_SVC(kernel='poly')                 | 0.500 (+/-0.000) | 0.592 (+/-0.023) | {'TangentSpace': TangentSpace(), 'classify': SVC(kernel='poly')}                 |
| TSFeatureExtractor()_SVC(kernel='poly')           | 0.496 (+/-0.006) | 0.699 (+/-0.052) | {'TangentSpace': TSFeatureExtractor(), 'classify': SVC(kernel='poly')}           |
| TSFeatureExtractor()_LinearDiscriminantAnalysis() | 0.495 (+/-0.012) | 0.671 (+/-0.034) | {'TangentSpace': TSFeatureExtractor(), 'classify': LinearDiscriminantAnalysis()} |
| TangentSpace()_LogisticRegression()               | 0.482 (+/-0.030) | 0.768 (+/-0.025) | {'TangentSpace': TangentSpace(), 'classify': LogisticRegression()}               |
## CSP + classifier
| abbr.                                     | test_score       | train_score      | params                                                                                     |
|-------------------------------------------|------------------|------------------|--------------------------------------------------------------------------------------------|
| logeuclid_6_SVC(C=0.8)                    | 0.524 (+/-0.047) | 0.578 (+/-0.014) | {'CSP__metric': 'logeuclid', 'CSP__nfilter': 6, 'classify': SVC(C=0.8)}                    |
| logeuclid_7_SVC()                         | 0.521 (+/-0.040) | 0.590 (+/-0.020) | {'CSP__metric': 'logeuclid', 'CSP__nfilter': 7, 'classify': SVC()}                         |
| logeuclid_4_LogisticRegression()          | 0.521 (+/-0.040) | 0.540 (+/-0.010) | {'CSP__metric': 'logeuclid', 'CSP__nfilter': 4, 'classify': LogisticRegression()}          |
| logeuclid_4_LinearDiscriminantAnalysis()  | 0.520 (+/-0.038) | 0.551 (+/-0.023) | {'CSP__metric': 'logeuclid', 'CSP__nfilter': 4, 'classify': LinearDiscriminantAnalysis()}  |
| logeuclid_8_SVC()                         | 0.512 (+/-0.016) | 0.593 (+/-0.028) | {'CSP__metric': 'logeuclid', 'CSP__nfilter': 8, 'classify': SVC()}                         |
| logeuclid_6_LogisticRegression()          | 0.512 (+/-0.019) | 0.565 (+/-0.027) | {'CSP__metric': 'logeuclid', 'CSP__nfilter': 6, 'classify': LogisticRegression()}          |
| euclid_7_LogisticRegression()             | 0.511 (+/-0.019) | 0.637 (+/-0.032) | {'CSP__metric': 'euclid', 'CSP__nfilter': 7, 'classify': LogisticRegression()}             |
| logeuclid_6_SVC()                         | 0.509 (+/-0.018) | 0.583 (+/-0.005) | {'CSP__metric': 'logeuclid', 'CSP__nfilter': 6, 'classify': SVC()}                         |
| riemann_4_LogisticRegression()            | 0.508 (+/-0.013) | 0.590 (+/-0.015) | {'CSP__metric': 'riemann', 'CSP__nfilter': 4, 'classify': LogisticRegression()}            |
| logeuclid_6_LinearDiscriminantAnalysis()  | 0.507 (+/-0.010) | 0.572 (+/-0.025) | {'CSP__metric': 'logeuclid', 'CSP__nfilter': 6, 'classify': LinearDiscriminantAnalysis()}  |
| logeuclid_5_SVC(C=0.8)                    | 0.506 (+/-0.008) | 0.577 (+/-0.020) | {'CSP__metric': 'logeuclid', 'CSP__nfilter': 5, 'classify': SVC(C=0.8)}                    |
| riemann_7_LogisticRegression()            | 0.504 (+/-0.010) | 0.618 (+/-0.010) | {'CSP__metric': 'riemann', 'CSP__nfilter': 7, 'classify': LogisticRegression()}            |
| riemann_4_SVC()                           | 0.501 (+/-0.002) | 0.625 (+/-0.019) | {'CSP__metric': 'riemann', 'CSP__nfilter': 4, 'classify': SVC()}                           |
| logeuclid_8_LogisticRegression()          | 0.501 (+/-0.002) | 0.586 (+/-0.010) | {'CSP__metric': 'logeuclid', 'CSP__nfilter': 8, 'classify': LogisticRegression()}          |
| logeuclid_6_GaussianNB(priors=[0.5, 0.5]) | 0.501 (+/-0.018) | 0.536 (+/-0.015) | {'CSP__metric': 'logeuclid', 'CSP__nfilter': 6, 'classify': GaussianNB(priors=[0.5, 0.5])} |
| riemann_8_LogisticRegression()            | 0.501 (+/-0.011) | 0.623 (+/-0.007) | {'CSP__metric': 'riemann', 'CSP__nfilter': 8, 'classify': LogisticRegression()}            |
| euclid_7_SVC()                            | 0.500 (+/-0.000) | 0.702 (+/-0.028) | {'CSP__metric': 'euclid', 'CSP__nfilter': 7, 'classify': SVC()}                            |
| euclid_4_GaussianNB(priors=[0.5, 0.5])    | 0.500 (+/-0.000) | 0.567 (+/-0.047) | {'CSP__metric': 'euclid', 'CSP__nfilter': 4, 'classify': GaussianNB(priors=[0.5, 0.5])}    |
| euclid_5_LinearDiscriminantAnalysis()     | 0.500 (+/-0.000) | 0.597 (+/-0.064) | {'CSP__metric': 'euclid', 'CSP__nfilter': 5, 'classify': LinearDiscriminantAnalysis()}     |
| euclid_5_GaussianNB(priors=[0.5, 0.5])    | 0.500 (+/-0.000) | 0.574 (+/-0.032) | {'CSP__metric': 'euclid', 'CSP__nfilter': 5, 'classify': GaussianNB(priors=[0.5, 0.5])}    |
| euclid_6_GaussianNB(priors=[0.5, 0.5])    | 0.500 (+/-0.000) | 0.573 (+/-0.031) | {'CSP__metric': 'euclid', 'CSP__nfilter': 6, 'classify': GaussianNB(priors=[0.5, 0.5])}    |
| euclid_4_SVC(C=0.8)                       | 0.500 (+/-0.000) | 0.676 (+/-0.028) | {'CSP__metric': 'euclid', 'CSP__nfilter': 4, 'classify': SVC(C=0.8)}                       |
| logeuclid_4_SVC(C=0.8)                    | 0.500 (+/-0.004) | 0.568 (+/-0.016) | {'CSP__metric': 'logeuclid', 'CSP__nfilter': 4, 'classify': SVC(C=0.8)}                    |
| euclid_8_SVC()                            | 0.500 (+/-0.000) | 0.702 (+/-0.030) | {'CSP__metric': 'euclid', 'CSP__nfilter': 8, 'classify': SVC()}                            |
| euclid_8_LogisticRegression()             | 0.500 (+/-0.000) | 0.640 (+/-0.035) | {'CSP__metric': 'euclid', 'CSP__nfilter': 8, 'classify': LogisticRegression()}             |
| euclid_5_SVC(C=0.8)                       | 0.500 (+/-0.000) | 0.682 (+/-0.033) | {'CSP__metric': 'euclid', 'CSP__nfilter': 5, 'classify': SVC(C=0.8)}                       |
| euclid_4_LinearDiscriminantAnalysis()     | 0.500 (+/-0.000) | 0.576 (+/-0.062) | {'CSP__metric': 'euclid', 'CSP__nfilter': 4, 'classify': LinearDiscriminantAnalysis()}     |
| euclid_5_SVC()                            | 0.500 (+/-0.000) | 0.687 (+/-0.030) | {'CSP__metric': 'euclid', 'CSP__nfilter': 5, 'classify': SVC()}                            |
| euclid_6_SVC(C=0.8)                       | 0.500 (+/-0.000) | 0.688 (+/-0.030) | {'CSP__metric': 'euclid', 'CSP__nfilter': 6, 'classify': SVC(C=0.8)}                       |
| euclid_5_LogisticRegression()             | 0.500 (+/-0.000) | 0.596 (+/-0.061) | {'CSP__metric': 'euclid', 'CSP__nfilter': 5, 'classify': LogisticRegression()}             |
| euclid_4_SVC()                            | 0.500 (+/-0.000) | 0.681 (+/-0.025) | {'CSP__metric': 'euclid', 'CSP__nfilter': 4, 'classify': SVC()}                            |
| euclid_4_LogisticRegression()             | 0.500 (+/-0.000) | 0.578 (+/-0.060) | {'CSP__metric': 'euclid', 'CSP__nfilter': 4, 'classify': LogisticRegression()}             |
| logeuclid_7_LogisticRegression()          | 0.500 (+/-0.000) | 0.578 (+/-0.013) | {'CSP__metric': 'logeuclid', 'CSP__nfilter': 7, 'classify': LogisticRegression()}          |
| euclid_6_SVC()                            | 0.500 (+/-0.000) | 0.688 (+/-0.027) | {'CSP__metric': 'euclid', 'CSP__nfilter': 6, 'classify': SVC()}                            |
| riemann_5_SVC()                           | 0.500 (+/-0.000) | 0.636 (+/-0.013) | {'CSP__metric': 'riemann', 'CSP__nfilter': 5, 'classify': SVC()}                           |
| logeuclid_4_SVC()                         | 0.500 (+/-0.004) | 0.561 (+/-0.018) | {'CSP__metric': 'logeuclid', 'CSP__nfilter': 4, 'classify': SVC()}                         |
| riemann_8_SVC()                           | 0.500 (+/-0.000) | 0.637 (+/-0.017) | {'CSP__metric': 'riemann', 'CSP__nfilter': 8, 'classify': SVC()}                           |
| riemann_7_SVC()                           | 0.500 (+/-0.000) | 0.636 (+/-0.014) | {'CSP__metric': 'riemann', 'CSP__nfilter': 7, 'classify': SVC()}                           |
| riemann_6_SVC()                           | 0.500 (+/-0.000) | 0.633 (+/-0.021) | {'CSP__metric': 'riemann', 'CSP__nfilter': 6, 'classify': SVC()}                           |
| riemann_6_LogisticRegression()            | 0.500 (+/-0.000) | 0.609 (+/-0.010) | {'CSP__metric': 'riemann', 'CSP__nfilter': 6, 'classify': LogisticRegression()}            |
| logeuclid_4_GaussianNB(priors=[0.5, 0.5]) | 0.497 (+/-0.009) | 0.520 (+/-0.004) | {'CSP__metric': 'logeuclid', 'CSP__nfilter': 4, 'classify': GaussianNB(priors=[0.5, 0.5])} |
| logeuclid_5_LinearDiscriminantAnalysis()  | 0.496 (+/-0.006) | 0.563 (+/-0.020) | {'CSP__metric': 'logeuclid', 'CSP__nfilter': 5, 'classify': LinearDiscriminantAnalysis()}  |
| euclid_6_LogisticRegression()             | 0.495 (+/-0.009) | 0.597 (+/-0.061) | {'CSP__metric': 'euclid', 'CSP__nfilter': 6, 'classify': LogisticRegression()}             |
| riemann_5_LogisticRegression()            | 0.494 (+/-0.008) | 0.604 (+/-0.015) | {'CSP__metric': 'riemann', 'CSP__nfilter': 5, 'classify': LogisticRegression()}            |
| euclid_6_LinearDiscriminantAnalysis()     | 0.494 (+/-0.011) | 0.598 (+/-0.064) | {'CSP__metric': 'euclid', 'CSP__nfilter': 6, 'classify': LinearDiscriminantAnalysis()}     |
| logeuclid_5_LogisticRegression()          | 0.494 (+/-0.006) | 0.550 (+/-0.020) | {'CSP__metric': 'logeuclid', 'CSP__nfilter': 5, 'classify': LogisticRegression()}          |
| logeuclid_5_GaussianNB(priors=[0.5, 0.5]) | 0.490 (+/-0.036) | 0.518 (+/-0.006) | {'CSP__metric': 'logeuclid', 'CSP__nfilter': 5, 'classify': GaussianNB(priors=[0.5, 0.5])} |
| logeuclid_5_SVC()                         | 0.486 (+/-0.022) | 0.574 (+/-0.025) | {'CSP__metric': 'logeuclid', 'CSP__nfilter': 5, 'classify': SVC()}                         |
## FBCSP + classifier

| abbr.                     | test_score       | train_score      | params                                                                       |
|---------------------------|------------------|------------------|------------------------------------------------------------------------------|
| 8_4_LogisticRegression()  | 0.500 (+/-0.000) | 0.600 (+/-0.030) | {'FBCSP__k': 8, 'FBCSP__n_components': 4, 'classify': LogisticRegression()}  |
| 24_8_SVC()                | 0.500 (+/-0.000) | 0.719 (+/-0.018) | {'FBCSP__k': 24, 'FBCSP__n_components': 8, 'classify': SVC()}                |
| 24_8_LogisticRegression() | 0.500 (+/-0.000) | 0.641 (+/-0.007) | {'FBCSP__k': 24, 'FBCSP__n_components': 8, 'classify': LogisticRegression()} |
| 24_6_SVC()                | 0.500 (+/-0.000) | 0.719 (+/-0.018) | {'FBCSP__k': 24, 'FBCSP__n_components': 6, 'classify': SVC()}                |
| 24_6_LogisticRegression() | 0.500 (+/-0.000) | 0.641 (+/-0.007) | {'FBCSP__k': 24, 'FBCSP__n_components': 6, 'classify': LogisticRegression()} |
| 24_4_SVC()                | 0.500 (+/-0.000) | 0.719 (+/-0.018) | {'FBCSP__k': 24, 'FBCSP__n_components': 4, 'classify': SVC()}                |
| 24_4_LogisticRegression() | 0.500 (+/-0.000) | 0.641 (+/-0.007) | {'FBCSP__k': 24, 'FBCSP__n_components': 4, 'classify': LogisticRegression()} |
| 16_8_LogisticRegression() | 0.500 (+/-0.000) | 0.625 (+/-0.013) | {'FBCSP__k': 16, 'FBCSP__n_components': 8, 'classify': LogisticRegression()} |
| 16_6_SVC()                | 0.500 (+/-0.000) | 0.703 (+/-0.023) | {'FBCSP__k': 16, 'FBCSP__n_components': 6, 'classify': SVC()}                |
| 16_8_SVC()                | 0.500 (+/-0.000) | 0.703 (+/-0.023) | {'FBCSP__k': 16, 'FBCSP__n_components': 8, 'classify': SVC()}                |
| 16_4_SVC()                | 0.500 (+/-0.000) | 0.703 (+/-0.023) | {'FBCSP__k': 16, 'FBCSP__n_components': 4, 'classify': SVC()}                |
| 16_4_LogisticRegression() | 0.500 (+/-0.000) | 0.625 (+/-0.013) | {'FBCSP__k': 16, 'FBCSP__n_components': 4, 'classify': LogisticRegression()} |
| 8_8_SVC()                 | 0.500 (+/-0.000) | 0.669 (+/-0.031) | {'FBCSP__k': 8, 'FBCSP__n_components': 8, 'classify': SVC()}                 |
| 8_8_LogisticRegression()  | 0.500 (+/-0.000) | 0.600 (+/-0.030) | {'FBCSP__k': 8, 'FBCSP__n_components': 8, 'classify': LogisticRegression()}  |
| 8_6_SVC()                 | 0.500 (+/-0.000) | 0.669 (+/-0.031) | {'FBCSP__k': 8, 'FBCSP__n_components': 6, 'classify': SVC()}                 |
| 8_6_LogisticRegression()  | 0.500 (+/-0.000) | 0.600 (+/-0.030) | {'FBCSP__k': 8, 'FBCSP__n_components': 6, 'classify': LogisticRegression()}  |
| 8_4_SVC()                 | 0.500 (+/-0.000) | 0.669 (+/-0.031) | {'FBCSP__k': 8, 'FBCSP__n_components': 4, 'classify': SVC()}                 |
| 16_6_LogisticRegression() | 0.500 (+/-0.000) | 0.625 (+/-0.013) | {'FBCSP__k': 16, 'FBCSP__n_components': 6, 'classify': LogisticRegression()} |
| 32_8_LogisticRegression() | nan (+/-nan)     | nan (+/-nan)     | {'FBCSP__k': 32, 'FBCSP__n_components': 8, 'classify': LogisticRegression()} |
| 32_4_LogisticRegression() | nan (+/-nan)     | nan (+/-nan)     | {'FBCSP__k': 32, 'FBCSP__n_components': 4, 'classify': LogisticRegression()} |
| 32_4_SVC()                | nan (+/-nan)     | nan (+/-nan)     | {'FBCSP__k': 32, 'FBCSP__n_components': 4, 'classify': SVC()}                |
| 32_6_LogisticRegression() | nan (+/-nan)     | nan (+/-nan)     | {'FBCSP__k': 32, 'FBCSP__n_components': 6, 'classify': LogisticRegression()} |
| 32_6_SVC()                | nan (+/-nan)     | nan (+/-nan)     | {'FBCSP__k': 32, 'FBCSP__n_components': 6, 'classify': SVC()}                |
| 32_8_SVC()                | nan (+/-nan)     | nan (+/-nan)     | {'FBCSP__k': 32, 'FBCSP__n_components': 8, 'classify': SVC()}                |
